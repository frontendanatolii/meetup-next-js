{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { MongoClient, ObjectId } from \"mongodb\";\nimport { MeetUpDetail } from \"../../components/meetups/MeetupDetail\";\n\nconst MeetupDetails = ({\n  meetupData\n}) => {\n  return /*#__PURE__*/_jsx(MeetUpDetail, {\n    imageUrl: meetupData.imageUrl,\n    title: meetupData.title,\n    address: meetupData.address,\n    description: meetupData.description\n  });\n};\n\nexport const getStaticPaths = async () => {\n  const uri = 'mongodb+srv://probro12356:xoamEy4vrJ9V8691@cluster0.wbgjpqc.mongodb.net/?retryWrites=true&w=majority';\n  const client = await MongoClient.connect(uri);\n  const collection = client.db('meetup').collection('meetups');\n  const meetups = await collection.find({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  return {\n    fallback: 'blocking',\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    }))\n  };\n};\nexport const getStaticProps = async context => {\n  const meetupId = context.params.meetupId;\n  const uri = 'mongodb+srv://probro12356:xoamEy4vrJ9V8691@cluster0.wbgjpqc.mongodb.net/?retryWrites=true&w=majority';\n  const client = await MongoClient.connect(uri);\n  const collection = client.db('meetup').collection('meetups');\n  const selectedMeetup = await collection.find({\n    _id: new ObjectId(meetupId)\n  }).toArray();\n  client.close();\n  return {\n    props: {\n      meetupData: {\n        id: selectedMeetup[0]._id.toString(),\n        title: selectedMeetup[0].title,\n        address: selectedMeetup[0].address,\n        imageUrl: selectedMeetup[0].imageUrl,\n        description: selectedMeetup[0].description\n      }\n    }\n  };\n};\nexport default MeetupDetails;","map":null,"metadata":{},"sourceType":"module"}