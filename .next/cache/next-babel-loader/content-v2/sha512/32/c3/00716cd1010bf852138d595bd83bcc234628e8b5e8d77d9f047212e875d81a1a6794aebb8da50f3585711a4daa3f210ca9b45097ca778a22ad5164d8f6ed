{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\incode\\\\meetup-app-next-js\\\\pages\\\\index.js\";\nimport { MongoClient } from 'mongodb';\nimport MeetupList from '../components/meetups/MeetupList';\nconst DUMMY_MEETS = [{\n  id: 'm1',\n  title: 'first meet up',\n  image: 'https://www.w3schools.com/css/img_5terre.jpg',\n  address: 'some fictional address',\n  description: 'sad awra fddsg rfgd erfg asd jtrj ssdf'\n}, {\n  id: 'm2',\n  title: 'second meet up',\n  image: 'https://www.w3schools.com/css/img_5terre.jpg',\n  address: 'some second fictional address',\n  description: 'as rf rhtha eww wef h j6thr efds sdfd'\n}];\n\nconst HomePage = props => {\n  return /*#__PURE__*/_jsxDEV(MeetupList, {\n    meetups: props.meetups\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n\nexport const getStaticProps = async () => {\n  const uri = 'mongodb+srv://probro12356:xoamEy4vrJ9V8691@cluster0.wbgjpqc.mongodb.net/?retryWrites=true&w=majority';\n  const client = await MongoClient.connect(uri);\n  const collection = client.db('meetup').collection('meetups');\n  const meetupsFromServer = await collection.find();\n  client.close();\n  return {\n    props: {\n      meetups: meetupsFromServer.map(meetup => {\n        return {\n          title: meetup.title,\n          imageUrl: meetup.imageUrl,\n          address: meetup.address,\n          id: JSON.parse(JSON.stringify(meetup._id))\n        };\n      })\n    },\n    revalidate: 1\n  };\n};\nexport default HomePage;","map":{"version":3,"sources":["D:/incode/meetup-app-next-js/pages/index.js"],"names":["MongoClient","MeetupList","DUMMY_MEETS","id","title","image","address","description","HomePage","props","meetups","getStaticProps","uri","client","connect","collection","db","meetupsFromServer","find","close","map","meetup","imageUrl","JSON","parse","stringify","_id","revalidate"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,SAA5B;AACA,OAAOC,UAAP,MAAuB,kCAAvB;AAEA,MAAMC,WAAW,GAAG,CAClB;AACEC,EAAAA,EAAE,EAAE,IADN;AAEEC,EAAAA,KAAK,EAAE,eAFT;AAGEC,EAAAA,KAAK,EAAE,8CAHT;AAIEC,EAAAA,OAAO,EAAE,wBAJX;AAKEC,EAAAA,WAAW,EAAE;AALf,CADkB,EAQlB;AACEJ,EAAAA,EAAE,EAAE,IADN;AAEEC,EAAAA,KAAK,EAAE,gBAFT;AAGEC,EAAAA,KAAK,EAAE,8CAHT;AAIEC,EAAAA,OAAO,EAAE,+BAJX;AAKEC,EAAAA,WAAW,EAAE;AALf,CARkB,CAApB;;AAiBA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAC1B,sBACE,QAAC,UAAD;AAAY,IAAA,OAAO,EAAEA,KAAK,CAACC;AAA3B;AAAA;AAAA;AAAA;AAAA,UADF;AAGD,CAJD;;AAOA,OAAO,MAAMC,cAAc,GAAG,YAAW;AACvC,QAAMC,GAAG,GACP,sGADF;AAGA,QAAMC,MAAM,GAAG,MAAMb,WAAW,CAACc,OAAZ,CAAoBF,GAApB,CAArB;AAEA,QAAMG,UAAU,GAAGF,MAAM,CAACG,EAAP,CAAU,QAAV,EAAoBD,UAApB,CAA+B,SAA/B,CAAnB;AAEA,QAAME,iBAAiB,GAAG,MAAMF,UAAU,CAACG,IAAX,EAAhC;AAEAL,EAAAA,MAAM,CAACM,KAAP;AAEA,SAAO;AACLV,IAAAA,KAAK,EAAE;AACLC,MAAAA,OAAO,EAAEO,iBAAiB,CAACG,GAAlB,CAAsBC,MAAM,IAAI;AACvC,eAAO;AACLjB,UAAAA,KAAK,EAAEiB,MAAM,CAACjB,KADT;AAELkB,UAAAA,QAAQ,EAAED,MAAM,CAACC,QAFZ;AAGLhB,UAAAA,OAAO,EAAEe,MAAM,CAACf,OAHX;AAILH,UAAAA,EAAE,EAAEoB,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeJ,MAAM,CAACK,GAAtB,CAAX;AAJC,SAAP;AAMD,OAPQ;AADJ,KADF;AAWLC,IAAAA,UAAU,EAAE;AAXP,GAAP;AAaD,CAzBM;AA2BP,eAAenB,QAAf","sourcesContent":["import { MongoClient } from 'mongodb';\nimport MeetupList from '../components/meetups/MeetupList';\n\nconst DUMMY_MEETS = [\n  {\n    id: 'm1',\n    title: 'first meet up',\n    image: 'https://www.w3schools.com/css/img_5terre.jpg',\n    address: 'some fictional address',\n    description: 'sad awra fddsg rfgd erfg asd jtrj ssdf'\n  },\n  {\n    id: 'm2',\n    title: 'second meet up',\n    image: 'https://www.w3schools.com/css/img_5terre.jpg',\n    address: 'some second fictional address',\n    description: 'as rf rhtha eww wef h j6thr efds sdfd'\n  }\n]\n\nconst HomePage = (props) => {\n  return (\n    <MeetupList meetups={props.meetups} />\n  )\n};\n\n\nexport const getStaticProps = async() => {\n  const uri =\n    'mongodb+srv://probro12356:xoamEy4vrJ9V8691@cluster0.wbgjpqc.mongodb.net/?retryWrites=true&w=majority';\n\n  const client = await MongoClient.connect(uri);\n\n  const collection = client.db('meetup').collection('meetups');\n\n  const meetupsFromServer = await collection.find();\n\n  client.close();\n\n  return {\n    props: {\n      meetups: meetupsFromServer.map(meetup => {\n        return {\n          title: meetup.title,\n          imageUrl: meetup.imageUrl,\n          address: meetup.address,\n          id: JSON.parse(JSON.stringify(meetup._id)),\n        }\n      }),\n    },\n    revalidate: 1,\n  }\n}\n\nexport default HomePage;"]},"metadata":{},"sourceType":"module"}