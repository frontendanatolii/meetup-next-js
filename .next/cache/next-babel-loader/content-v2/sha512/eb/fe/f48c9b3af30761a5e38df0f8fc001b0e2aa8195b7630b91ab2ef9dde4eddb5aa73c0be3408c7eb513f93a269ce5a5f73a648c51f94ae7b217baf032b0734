{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\incode\\\\meetup-app-next-js\\\\pages\\\\[meetupId]\\\\index.js\",\n    _this = this;\n\nimport { MeetUpDetail } from \"../../components/meetups/MeetupDetail\";\n\nvar MeetupDetails = function MeetupDetails(_ref) {\n  var meetupData = _ref.meetupData;\n  return /*#__PURE__*/_jsxDEV(MeetUpDetail, {\n    imageUrl: meetupData.imageUrl,\n    title: meetupData.title,\n    address: meetupData.address,\n    description: meetupData.description\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, _this);\n};\n\n_c = MeetupDetails;\nexport var __N_SSG = true;\nexport default MeetupDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetupDetails\");","map":{"version":3,"sources":["D:/incode/meetup-app-next-js/pages/[meetupId]/index.js"],"names":["MeetUpDetail","MeetupDetails","meetupData","imageUrl","title","address","description"],"mappings":";;;;;AACA,SAASA,YAAT,QAA6B,uCAA7B;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,OAAoB;AAAA,MAAjBC,UAAiB,QAAjBA,UAAiB;AACxC,sBACE,QAAC,YAAD;AACE,IAAA,QAAQ,EAAEA,UAAU,CAACC,QADvB;AAEE,IAAA,KAAK,EAAED,UAAU,CAACE,KAFpB;AAGE,IAAA,OAAO,EAAEF,UAAU,CAACG,OAHtB;AAIE,IAAA,WAAW,EAAEH,UAAU,CAACI;AAJ1B;AAAA;AAAA;AAAA;AAAA,WADF;AAQD,CATD;;KAAML,a;;AAoDN,eAAeA,aAAf","sourcesContent":["import { MongoClient, ObjectId } from \"mongodb\";\nimport { MeetUpDetail } from \"../../components/meetups/MeetupDetail\";\n\nconst MeetupDetails = ({ meetupData }) => {\n  return (\n    <MeetUpDetail\n      imageUrl={meetupData.imageUrl}\n      title={meetupData.title}\n      address={meetupData.address}\n      description={meetupData.description}\n    />\n  )  \n};\n\nexport const getStaticPaths = async() => {\n  const uri =\n    'mongodb+srv://probro12356:xoamEy4vrJ9V8691@cluster0.wbgjpqc.mongodb.net/?retryWrites=true&w=majority';\n\n  const client = await MongoClient.connect(uri);\n\n  const collection = client.db('meetup').collection('meetups');\n\n  const meetups = await collection.find({}, { _id: 1 }).toArray();\n\n  client.close();\n\n  return {\n    fallback: false,\n    paths: meetups.map((meetup) => ({ params: { meetupId: meetup._id.toString() } })) \n  }\n};\n\nexport const getStaticProps = async(context) => {\n  const meetupId = context.params.meetupId;\n\n  const uri =\n    'mongodb+srv://probro12356:xoamEy4vrJ9V8691@cluster0.wbgjpqc.mongodb.net/?retryWrites=true&w=majority';\n\n  const client = await MongoClient.connect(uri);\n\n  const collection = client.db('meetup').collection('meetups');\n\n  const selectedMeetup = await collection.find({_id: new ObjectId(meetupId)}).toArray();\n\n  console.log(selectedMeetup);\n\n  client.close();\n\n  return {\n    props: {\n      meetupData: JSON.stringify,\n    }\n  }\n}\n\nexport default MeetupDetails;\n"]},"metadata":{},"sourceType":"module"}