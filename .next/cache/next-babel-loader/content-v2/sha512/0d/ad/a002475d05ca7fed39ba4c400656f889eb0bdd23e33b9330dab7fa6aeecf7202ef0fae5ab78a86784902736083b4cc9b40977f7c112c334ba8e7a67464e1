{"ast":null,"code":"import { MongoClient } from 'mongodb';\n\nasync function handler(req, res) {\n  if (req.method === 'POST') {\n    const data = JSON.parse(req.body);\n    const uri = 'mongodb+srv://probro12356:VyS41sybwBMvoaE3@cluster0.0obdul2.mongodb.net/meetups?retryWrites=true&w=majority';\n    const client = await MongoClient.connect(uri);\n    const collection = client.db('meetup').collection('meetups');\n    const result = await collection.insertOne(data);\n    client.close();\n    res.status(201).json({\n      message: 'Meetup inserted!'\n    });\n  }\n}\n\nexport default handler;","map":{"version":3,"sources":["D:/incode/meetup-app-next-js/pages/api/new-meetup.js"],"names":["MongoClient","handler","req","res","method","data","JSON","parse","body","uri","client","connect","collection","db","result","insertOne","close","status","json","message"],"mappings":"AAAA,SAASA,WAAT,QAA4B,SAA5B;;AAEA,eAAeC,OAAf,CAAuBC,GAAvB,EAA4BC,GAA5B,EAAiC;AAC/B,MAAID,GAAG,CAACE,MAAJ,KAAe,MAAnB,EAA2B;AACzB,UAAMC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWL,GAAG,CAACM,IAAf,CAAb;AAEA,UAAMC,GAAG,GACP,6GADF;AAGA,UAAMC,MAAM,GAAG,MAAMV,WAAW,CAACW,OAAZ,CAAoBF,GAApB,CAArB;AAEA,UAAMG,UAAU,GAAGF,MAAM,CAACG,EAAP,CAAU,QAAV,EAAoBD,UAApB,CAA+B,SAA/B,CAAnB;AAEA,UAAME,MAAM,GAAG,MAAMF,UAAU,CAACG,SAAX,CAAqBV,IAArB,CAArB;AAEAK,IAAAA,MAAM,CAACM,KAAP;AAEAb,IAAAA,GAAG,CAACc,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAArB;AACD;AACF;;AAED,eAAelB,OAAf","sourcesContent":["import { MongoClient } from 'mongodb';\n \nasync function handler(req, res) {\n  if (req.method === 'POST') {\n    const data = JSON.parse(req.body);\n \n    const uri =\n      'mongodb+srv://probro12356:VyS41sybwBMvoaE3@cluster0.0obdul2.mongodb.net/meetups?retryWrites=true&w=majority';\n \n    const client = await MongoClient.connect(uri);\n \n    const collection = client.db('meetup').collection('meetups');\n \n    const result = await collection.insertOne(data);\n \n    client.close();\n \n    res.status(201).json({ message: 'Meetup inserted!' });\n  }\n}\n \nexport default handler;"]},"metadata":{},"sourceType":"module"}